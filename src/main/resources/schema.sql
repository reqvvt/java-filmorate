CREATE TABLE IF NOT EXISTS USERS(
    USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL,
    LOGIN VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA(
    RATING_ID INTEGER PRIMARY KEY,
    RATING_VALUE VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS(
    FILM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    RATING_ID INTEGER NOT NULL,
    CONSTRAINT fk_rating_id FOREIGN KEY(RATING_ID) REFERENCES MPA(RATING_ID)
);

CREATE TABLE IF NOT EXISTS GENRES(
    GENRE_ID INTEGER PRIMARY KEY,
    GENRE VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES(
    FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT fk_film_genre_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_genre_genre_id FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES(
    USER_ID INTEGER NOT NULL,
    FILM_ID INTEGER NOT NULL,
    PRIMARY KEY (USER_ID, FILM_ID),
    CONSTRAINT fk_film_like_user_id FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_like_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS FRIENDS(
    USER_ID INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT fk_user_id FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

